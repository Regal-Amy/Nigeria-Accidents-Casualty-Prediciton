{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6847197,"sourceType":"datasetVersion","datasetId":3936352}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:44:59.936632Z\",\"iopub.execute_input\":\"2024-10-14T14:44:59.937076Z\",\"iopub.status.idle\":\"2024-10-14T14:45:02.117392Z\",\"shell.execute_reply.started\":\"2024-10-14T14:44:59.937009Z\",\"shell.execute_reply\":\"2024-10-14T14:45:02.116325Z\"}}\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:02.119815Z\",\"iopub.execute_input\":\"2024-10-14T14:45:02.121125Z\",\"iopub.status.idle\":\"2024-10-14T14:45:02.162846Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:02.121040Z\",\"shell.execute_reply\":\"2024-10-14T14:45:02.161794Z\"}}\ndf1 = pd.read_csv(\"/kaggle/input/nigeria-road-accident-dataset/nigeria_road_accidents.csv\")\nprint(df1.shape)\ndf1.head()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:02.164015Z\",\"iopub.execute_input\":\"2024-10-14T14:45:02.164409Z\",\"iopub.status.idle\":\"2024-10-14T14:45:02.210652Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:02.164367Z\",\"shell.execute_reply\":\"2024-10-14T14:45:02.209588Z\"}}\ndf2 = pd.read_csv(\"/kaggle/input/nigeria-road-accident-dataset/nigeria_road_accidents_causes.csv\")\nprint(df2.shape)\ndf2.head()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:02.213344Z\",\"iopub.execute_input\":\"2024-10-14T14:45:02.213749Z\",\"iopub.status.idle\":\"2024-10-14T14:45:02.237839Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:02.213706Z\",\"shell.execute_reply\":\"2024-10-14T14:45:02.236571Z\"}}\ndf1 = df1.rename(columns={'STATE ID': 'id'})\ndf1\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:02.239410Z\",\"iopub.execute_input\":\"2024-10-14T14:45:02.239805Z\",\"iopub.status.idle\":\"2024-10-14T14:45:02.289422Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:02.239763Z\",\"shell.execute_reply\":\"2024-10-14T14:45:02.288130Z\"}}\ndf = pd.merge(df1, df2, on = 'id')\ndf\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:02.290946Z\",\"iopub.execute_input\":\"2024-10-14T14:45:02.291403Z\",\"iopub.status.idle\":\"2024-10-14T14:45:02.317331Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:02.291330Z\",\"shell.execute_reply\":\"2024-10-14T14:45:02.316233Z\"}}\ndf.info()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:02.319248Z\",\"iopub.execute_input\":\"2024-10-14T14:45:02.319652Z\",\"iopub.status.idle\":\"2024-10-14T14:45:02.327310Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:02.319604Z\",\"shell.execute_reply\":\"2024-10-14T14:45:02.325994Z\"}}\nparams = 'UPD', 'TBT', 'MDV', 'BFL'\n\nfor col in params:\n    df[col] = df[col].astype(int)\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:02.328671Z\",\"iopub.execute_input\":\"2024-10-14T14:45:02.329074Z\",\"iopub.status.idle\":\"2024-10-14T14:45:02.347910Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:02.328994Z\",\"shell.execute_reply\":\"2024-10-14T14:45:02.346719Z\"}}\ndf.info()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:02.349331Z\",\"iopub.execute_input\":\"2024-10-14T14:45:02.349796Z\",\"iopub.status.idle\":\"2024-10-14T14:45:02.431485Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:02.349746Z\",\"shell.execute_reply\":\"2024-10-14T14:45:02.430068Z\"}}\ndf.describe()\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:02.434754Z\",\"iopub.execute_input\":\"2024-10-14T14:45:02.435144Z\",\"iopub.status.idle\":\"2024-10-14T14:45:03.083689Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:02.435103Z\",\"shell.execute_reply\":\"2024-10-14T14:45:03.082399Z\"}}\ndef bar_plot(df, x_col, y_col, title):\n    plt.figure(figsize=(12, 6))\n    sns.barplot(x=df[x_col], y=df[y_col])\n    plt.title(title)\n    plt.xlabel(x_col)\n    plt.ylabel(y_col)\n    plt.xticks(rotation=45)\n    plt.show()\n    \nstate_case_counts = df.groupby('state')['TOTAL CASES'].sum().reset_index()\n\nstate_case_counts.columns = ['State', 'Total Cases']\n\nbar_plot(state_case_counts, 'State', 'Total Cases', 'State vs Total Cases')\n\n# %% [markdown]\n# *From the above analysis, it is apparent that OGUN STATE has the highest total reported accident cases (about 1750) in Nigeria over the span of 2 years, closely followed by FCT Abuja*\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:03.085402Z\",\"iopub.execute_input\":\"2024-10-14T14:45:03.085820Z\",\"iopub.status.idle\":\"2024-10-14T14:45:03.646989Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:03.085777Z\",\"shell.execute_reply\":\"2024-10-14T14:45:03.645656Z\"}}\nstate_case_counts = df.groupby('state')['PEOPLE INVOLVED'].sum().reset_index()\n\nstate_case_counts.columns = ['State', 'PEOPLE INVOLVED']\n\nbar_plot(state_case_counts, 'State', 'PEOPLE INVOLVED', 'State vs PEOPLE INVOLVED')\n\n# %% [markdown]\n# *Ogun state has the highest number of people involved in accidents*\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:03.650298Z\",\"iopub.execute_input\":\"2024-10-14T14:45:03.650838Z\",\"iopub.status.idle\":\"2024-10-14T14:45:13.180795Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:03.650781Z\",\"shell.execute_reply\":\"2024-10-14T14:45:13.179494Z\"}}\nparams = df[['SPV', 'UPD', 'TBT', 'MDV', 'BFL', 'OVL',\n       'DOT', 'WOT', 'DGD', 'BRD', 'RTV', 'OBS', 'SOS', 'DAD', 'PWR', 'FTQ',\n       'SLV']]\n\ntitles = [\n    'Speeding (SPV)',\n    'Unsafe Parking/Driving (UPD)',\n    'Tire Blowouts (TBT)',\n    'Mechanical Defects/Failures (MDV)',\n    'Bad/Faulty Lights (BFL)',\n    'Overloading (OVL)',\n    'Driver\\'s Omission/Negligence (DOT)',\n    'Wrongful Overtaking (WOT)',\n    'Dangerous Driving (DGD)',\n    'Broken Road (BRD)',\n    'Road Traffic Violation (RTV)',\n    'Obstruction (OBS)',\n    'Sudden Obstruction/Stop (SOS)',\n    'Driver Aggressive Driving (DAD)',\n    'Poor Road Conditions (PWR)',\n    'Failure to Queue (FTQ)',\n    'Signal Violation (SLV)'\n]\n\n\n\nfor col in params:\n    state_param_count = df.groupby('state')[col].sum().reset_index()\n    state_param_count.columns = ['State', col]\n    bar_plot(state_param_count, 'State', col, f'State vs {titles[0]}')\n    titles.pop(0)\n\n# %% [markdown]\n# *It appears that each state has its leading cause of accidents. For Ogun state, speeding and mechanical defects seem to be its leading cause.*\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:13.182314Z\",\"iopub.execute_input\":\"2024-10-14T14:45:13.182789Z\",\"iopub.status.idle\":\"2024-10-14T14:45:13.735958Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:13.182734Z\",\"shell.execute_reply\":\"2024-10-14T14:45:13.734487Z\"}}\nstate_case_counts = df.groupby('state')['SERIOUS'].sum().reset_index()\n\nstate_case_counts.columns = ['State', 'SERIOUS']\n\nbar_plot(state_case_counts, 'State', 'SERIOUS', 'State vs SEVERITY')\n\n# %% [markdown]\n# *FCT and Ogun has the highest accident severity*\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:13.737820Z\",\"iopub.execute_input\":\"2024-10-14T14:45:13.738358Z\",\"iopub.status.idle\":\"2024-10-14T14:45:13.747447Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:13.738300Z\",\"shell.execute_reply\":\"2024-10-14T14:45:13.746209Z\"}}\ndf1.columns\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:13.749363Z\",\"iopub.execute_input\":\"2024-10-14T14:45:13.749862Z\",\"iopub.status.idle\":\"2024-10-14T14:45:14.272317Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:13.749807Z\",\"shell.execute_reply\":\"2024-10-14T14:45:14.271110Z\"}}\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.preprocessing import StandardScaler\n\n\n# Prepare features (X) and target variable (y)\nX = df.drop(columns=['id', 'STATE', 'FATAL', 'SERIOUS', 'MINOR', 'TOTAL CASES',\n       'NUMBER INJURED', 'NUMBER KILLED', 'TOTAL CASUALTY', 'PEOPLE INVOLVED',\n       'PERIOD', 'state', 'period'])\ny = df['TOTAL CASUALTY']\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:14.274026Z\",\"iopub.execute_input\":\"2024-10-14T14:45:14.274591Z\",\"iopub.status.idle\":\"2024-10-14T14:45:14.294735Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:14.274533Z\",\"shell.execute_reply\":\"2024-10-14T14:45:14.293604Z\"}}\n# Split the dataset into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Optional: Scale the features\nscaler = StandardScaler()\nX_train = scaler.fit_transform(X_train)\nX_test = scaler.transform(X_test)\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:14.298808Z\",\"iopub.execute_input\":\"2024-10-14T14:45:14.299891Z\",\"iopub.status.idle\":\"2024-10-14T14:45:14.542966Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:14.299842Z\",\"shell.execute_reply\":\"2024-10-14T14:45:14.541805Z\"}}\n# Initialize and train the model\nmodel = RandomForestRegressor(n_estimators=100, random_state=42)  # Using Random Forest for regression\nmodel.fit(X_train, y_train)\n\n# Make predictions\ny_pred = model.predict(X_test)\n\n# Evaluate the model\nmse = mean_squared_error(y_test, y_pred)\nr2 = r2_score(y_test, y_pred)\n\nprint(f\"Mean Squared Error: {mse}\")\nprint(f\"R-squared: {r2}\")\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false},\"execution\":{\"iopub.status.busy\":\"2024-10-14T14:45:14.544287Z\",\"iopub.execute_input\":\"2024-10-14T14:45:14.544645Z\",\"iopub.status.idle\":\"2024-10-14T14:45:14.607593Z\",\"shell.execute_reply.started\":\"2024-10-14T14:45:14.544606Z\",\"shell.execute_reply\":\"2024-10-14T14:45:14.606431Z\"}}\nimport joblib\n# Save the model to a file\njoblib.dump(model, 'Nigerian_casualties_prediction_model.pkl')\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false}}\n","metadata":{"_uuid":"1bf840eb-9bbd-47d1-b103-a37f5539d7d1","_cell_guid":"4ddaa76a-95e3-4ed0-8424-7b0bce0399cf","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}